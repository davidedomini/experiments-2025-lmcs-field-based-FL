incarnation: scafi

_constants:
  retentionTime: &retentionTime 2.0

variables:
  seed: &seed
    min: 0
    max: 1
    step: 1
    default: 0
  spacing: &spacing
    formula: 0.5
  longSideNodes: &xNodes
    formula: 3
  shortSideNodes: &yNodes
    formula: 4
  error: &error
    formula: 0
  partitioning: &partitioning
    language: scala
    formula: |
      import it.unibo.learning.model.Dirichlet
      Dirichlet(0.5)
  experiment: &experiment
    formula: "\"MNIST\""
  experimentMolecule: &experimentMolecule
    language: scala
    formula: >
      s""" "${experiment.toString}" """
  batchSize: &batchSize
    formula: 32
  epochs: &epochs
    formula: 2
  areas: &areas
    formula: 3
#  resilience: &resilience
#    formula: true

seeds:
  scenario: *seed
  simulation: *seed

network-model:
  type: ConnectWithinDistance
  parameters: [7.5]

layers:
  - type: PhenomenaDistribution
    parameters: [0, 0, *xNodes, *yNodes, *areas, *partitioning, *experiment, 0.8, *seed]
    molecule: Phenomena

_gradient: &gradient
  - time-distribution:
      type: DiracComb
      parameters: [ 0.2, 1 ]
    type: Event
    actions:
      - type: RunScafiProgram
        parameters: [it.unibo.scafi.FBFLClient, *retentionTime]
  - program: send

environment:
  type: Continuous2DEnvironment
  parameters: [ ]
  global-programs:
    - time-distribution:
        type: Trigger
        parameters: [0]
      type: PhenomenaToDataset
      parameters: []
    - time-distribution:
        type: Trigger
        parameters: [ 0.1 ]
      type: ModelAndSeedInitialization
      parameters: [*seed, *experiment]
    - time-distribution:
        type: DiracComb
        parameters: [ 0.3, 1 ]
      type: CheckTheLeader
      parameters: [ *seed, *experiment ]

monitors:
  - type: it.unibo.alchemist.model.monitors.DecentralizedTestSetEvaluation
    parameters: [*batchSize, *experiment, *areas, *seed, *partitioning]

_molecules: &molecules
  - molecule: BatchSize
    concentration: *batchSize
  - molecule: Epochs
    concentration: *epochs
  - molecule: Seed
    concentration: *seed
  - molecule: Experiment
    concentration: *experimentMolecule

deployments:
  - type: Grid # Left
    parameters: [-5, -1, -3, 1, *spacing, *spacing, *error, *error]
    contents: *molecules
    programs: *gradient
  - type: Grid # Center
    parameters: [ 1.1, 2, 2, 6, *spacing, *spacing, *error, *error ]
    contents: *molecules
    programs: *gradient
  - type: Grid # Right
    parameters: [ 8, 4, 10, 6, *spacing, *spacing, *error, *error ]
    contents: *molecules
    programs: *gradient

terminate:
  type: AfterTime
  parameters: 30

export:
  - type: CSVExporter
    parameters:
      fileNameRoot: "experiment_areas-3_dataset-MNIST_dir"
      interval: 1.0
      exportPath: "data"
    data:
      - time
      - molecule: TrainingLoss
        aggregators: [min, max, mean, variance]
        value-filter: onlyFinite
        precision: 3
      - molecule: ValidationLoss
        aggregators: [min, max, mean, variance]
        value-filter: onlyfinite
      - molecule: ValidationAccuracy
        aggregators: [min, max, mean, variance]
        value-filter: onlyfinite