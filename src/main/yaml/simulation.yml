incarnation: scafi

_constants:
  retentionTime: &retentionTime 15.0

variables:
  seed: &seed
    min: 0
    max: 1
    step: 1
    default: 0
  spacing: &spacing
    formula: 0.5
  longSideNodes: &xNodes
    formula: 3
  shortSideNodes: &yNodes
    formula: 4
  error: &error
    formula: 0
  partitioning: &partitioning
    language: scala
    formula: |
      import it.unibo.learning.model.Hard
      Hard

seeds:
  scenario: *seed
  simulation: *seed

network-model:
  type: ConnectWithinDistance
  parameters: [1.5]

layers:
  - type: PhenomenaDistribution
    parameters: [ 0, 0, *xNodes, *yNodes, 9, *partitioning, "MNIST", 0.8, *seed]
    molecule: Phenomena

_gradient: &gradient
  - time-distribution:
      type: DiracComb
      parameters: [ 0.1, 1 ]
    type: Event
    actions:
      - type: RunScafiProgram
        parameters: [it.unibo.scafi.FBFLClient, *retentionTime]
  - program: send

environment:
  type: Continuous2DEnvironment
  parameters: [ ]
  global-programs:
    - time-distribution:
        type: Trigger
        parameters: [0]
      type: PhenomenaToDataset
      parameters: []

deployments:
  type: Grid
  parameters: [0, 0, *xNodes, *yNodes, *spacing, *spacing, *error, *error]
  contents:
    - in:
        type: Rectangle
        parameters: [-6, -6, 2, 2]
      molecule: source
      concentration: true
  programs: *gradient


terminate:
  type: AfterTime
  parameters: 150
